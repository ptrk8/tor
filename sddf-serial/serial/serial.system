<?xml version="1.0" encoding="UTF-8"?>
<system>
    <!-- We create in a 4K page of physical memory at 0x30890000, which is the
    physical address where the UART device registers are mapped to. -->
    <memory_region
            name="uart"
            size="0x10_000"
            phys_addr="0x30890000"/>
    <!-- This is a shared buffer that `client_buf` writes to and `serial_server_buf`
    reads from. -->
    <memory_region
            name="serial_to_client_transmit_buf"
            size="0x1_000" />
    <!-- The `serial_driver` PD must have a higher priority than the
    `serial_client` PD so that it doesn't get preempted by `serial_client` when
    it is busy writing to the UART device. -->
    <protection_domain
            name="serial_driver"
            priority="101"
            pp="true">
        <program_image path="serial_driver.elf"/>
        <!-- We map our physical memory to the virtual address at 0x5_000_000 -->
        <map
                mr="uart"
                vaddr="0x5_000_000"
                perms="rw"
                cached="false"
                setvar_vaddr="uart_base_vaddr"/>
        <!-- The UART IRQs for the imx8mm according to its DTS files are
        actually 26 to 29; however, since seL4 uses the first 32 interrupts for
        itself, all the hardware interrupt values are offset by 32. As such, the
        imx8mm's UART interrupts are now 58 - 61. -->
<!--        <irq irq="58" id="1" />-->
        <irq irq="59" id="2" />
<!--        <irq irq="60" id="3" />-->
<!--        <irq irq="61" id="4" />-->
        <!-- Map in the `serial_to_client_transmit_buf` as Read-only since the
        `serial_driver` PD simply needs to be able to read what the
        `serial_client` PD is wants to write to the UART device. -->
        <map
                mr="serial_to_client_transmit_buf"
                vaddr="0x6_000_000"
                perms="r"
                setvar_vaddr="serial_to_client_transmit_buf"/>
    </protection_domain>
    <!-- The `serial_client` PD must have a lower priority than the
    `serial_driver` PD so that it doesn't preempt `serial_client` when it is
    busy writing to the UART device. -->
    <protection_domain
            name="serial_client"
            priority="100"
            pp="true">
        <program_image path="serial_client.elf"/>
        <!-- Map in the `serial_to_client_transmit_buf` as Read/Write since the
        `serial_client` PD needs to be able to write to this buffer, which will
        then be read by the `serial_driver` PD. -->
        <map
                mr="serial_to_client_transmit_buf"
                vaddr="0x5_000_000"
                perms="rw"
                setvar_vaddr="serial_to_client_transmit_buf"/>
    </protection_domain>
    <!-- Channel between `serial_client` and `serial_driver`. -->
    <channel>
        <end pd="serial_client" id="3" />
        <end pd="serial_driver" id="4" />
    </channel>
</system>

